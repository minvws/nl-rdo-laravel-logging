name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:

jobs:
  validate:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
          php: [ "8.1", "8.2", "8.3", "8.4" ]
          laravel: [ "10.*", "11.*", "12.*" ]
          stability: [ prefer-stable ]
          composer_flags: [ "", "--prefer-lowest" ]
          include:
            - laravel: 10.*
              testbench: 8.*
            - laravel: 11.*
              testbench: 9.*
            - laravel: 12.*
              testbench: 10.*
          exclude:
            - laravel: 11.*
              php: 8.1
            - laravel: 12.*
              php: 8.1

    name: 'Build & validate: PHP ${{ matrix.php }} - L${{ matrix.laravel }} ${{ matrix.composer_flags}}'
    env:
      PHP: ${{ matrix.php }}
      COMPOSER_MEMORY_LIMIT: -1
      COMPOSER_FLAGS: ${{ matrix.composer_flags }}
      PHP_VERSION: ${{ matrix.php }}
    steps:
      - uses: actions/checkout@v4
      - name: Install PHP
        uses: shivammathur/setup-php@master
        with:
            php-version: ${{ matrix.php }}
            extensions: xdebug, zip

      - name: Install dependencies
        run: |
            composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
            composer update --${{ matrix.stability }} --prefer-dist --no-interaction $COMPOSER_FLAGS

      - name: Static analysis with PHPStan
        run: vendor/bin/phpstan analyse --error-format=prettyJson > phpstan.json

      - name: Coding style PSR12 Check
        run: vendor/bin/phpcs

      - name: Psalm check
        run: vendor/bin/psalm

      - name: Execute tests (Unit and Feature)
        run: vendor/bin/phpunit --log-junit=report-phpunit.xml --coverage-text --coverage-clover=coverage-phpunit.xml

      - name: Upload reports
        uses: actions/upload-artifact@v4
        if: ${{ matrix.php == '8.3' &&  matrix.laravel == '11.*' &&  matrix.composer_flags == '' }}
        with:
          name: reports
          path: |
            report-phpunit.xml
            coverage-phpunit.xml

  sonar:
    name: 'SonarCloud'
    runs-on: ubuntu-22.04
    needs: validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          name: reports

      - name: Run SonarQube scan
        uses: minvws/action-sonarqube@v1
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}